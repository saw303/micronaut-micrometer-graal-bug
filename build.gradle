plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.7"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    implementation("io.opentelemetry:opentelemetry-exporter-jaeger")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    compileOnly("org.graalvm.nativeimage:svm")

    implementation("io.micronaut:micronaut-validation")
}

configurations.all {

      resolutionStrategy {
        force "io.micronaut.tracing:micronaut-tracing-opentelemetry:4.5.0"
        force "io.micronaut.tracing:micronaut-tracing-opentelemetry-http:4.5.0"
      }
}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

tasks.named("dockerfile") {
  baseImage = "eclipse-temurin:19.0.1_10-jre"
  instruction 'RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*'
  instruction """HEALTHCHECK CMD curl -s localhost:8080/endpoints/health | grep '"status":"UP"'"""
}

tasks.named("dockerfileNative") {
  baseImage('ubuntu:22.04')
  instruction 'RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*'
  instruction """HEALTHCHECK CMD curl -s localhost:8080/endpoints/health | grep '"status":"UP"'"""
}


